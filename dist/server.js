!function(e){var t={};function s(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)s.d(n,o,function(t){return e[t]}.bind(null,o));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="/",s(s.s=11)}([function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("moment")},function(e,t){e.exports=require("bcryptjs")},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("jsonwebtoken")},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("nodemailer")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("morgan")},function(e,t){e.exports=require("body-parser")},function(e,t){e.exports=require("cors")},function(e,t,s){"use strict";s.r(t);var n=s(7),o=s.n(n),r=s(0),a=s.n(r),i=s(8),c=s.n(i),u=s(9),d=s.n(u),l=s(10),p=s.n(l),v=s(1),m=s.n(v);var f=new class{constructor(){this.reflections=[]}create(e){const t={id:"1",success:e.success||"",lowPoint:e.lowPoint||"",takeAway:e.takeAway||"",createDate:m.a.now(),modifiedDate:m.a.now()};return this.reflections.push(t),t}findAll(){return this.reflections}findOne(e){return this.reflections.find(t=>t.id==e)}delete(e){const t=this.findOne(e),s=this.reflections.indexOf(t);return this.reflections.splice(s,1),{}}};var g={create(e,t){if(!e.body.success&&!e.body.lowPoint&&!e.body.takeAway)return t.status(400).send({message:"All fields are required"});const s=f.create(e.body);return t.status(201).send(s)},getAll(e,t){const s=f.findAll();return t.status(200).send(s)},getOne(e,t){console.log(e.params);const s=f.findOne(parseInt(e.params.id));return s?t.status(200).send(s):t.status(404).send({message:"Reflection not found"})},delete(e,t){if(!f.findOne(e.params.id))return t.status(400).send({message:"reflection not found"});const s=f.delete(e.params.id);return t.status(204).send(s)}};const h=new r.Schema({username:{type:String,required:"Username is required",unique:!0},email:{type:String,required:"Email is required",lowercase:!0,unique:!0},password:{type:String,trim:!0},isActive:{type:Boolean,default:!1},activationDate:{type:Date},activationCode:{type:a.a.Schema.Types.ObjectId,ref:"activationCode"}});var y=a.a.model("user",h);const b=new r.Schema({validationCode:{type:String,maxlength:6,trim:!0},validationCodeSendDate:{type:Date},validationCodeExpirationDate:{type:Date}});var O=a.a.model("activationCode",b),A=s(6),x=s.n(A);const I=process.env.MAILING_HOST||"smtp.mailgun.org",S=process.env.MAILING_PORT||587,w=process.env.MAILING_USERNAME||"",M=process.env.MAILING_PASSWORD||"",j=process.env.MAILING_SENDER_NAME||"React App v1.0",E=(process.env.MAILING_BASE_URL,process.env.MAILING_API_KEY,process.env.MAILING_TEST_MODE);var N=s(2);const C={create(e,t){const s=U(6),n=new a.a.Types.ObjectId;let o=new y(e.body);o.isActive=!1,o.activationCode=n,o.password=Object(N.hashSync)(e.body.password,10),o.save().then(e=>{new O({_id:n,validationCode:s,validationCodeSendDate:m()(),validationCodeExpirationDate:m()().add(30,"minute")}).save();let o={success:!0,user:{username:e.username,email:e.email},message:"Félicitations ! votre compte a été créé avec succés. Un code d'activation vous a été envoyé sur : "+e.email};(async(e,t)=>{let s=x.a.createTransport({host:I,port:S,secure:!1,auth:{user:w,pass:M}});if(E){const e=await x.a.createTestAccount();s=x.a.createTransport({host:"smtp.ethereal.email",port:587,secure:!1,auth:{user:e.user,pass:e.pass}}),console.log("using test mode"),console.log("user: %s",e.user),console.log("pass : %s",e.pass)}let n=await s.sendMail({from:`${j} <${w}>`,to:e,subject:"Activate your account !",text:"Your activation code is : "+t,html:"<center><h1>Activate your account</h1><p>"+t+"</p></center>"});E&&console.log("Email envoyé. URL = %s",x.a.getTestMessageUrl(n))})(e.email,s).then(()=>{t.send(o)}).catch(e=>{o.success=!1,o.message="Un problème est survenu lors de l'envoi de votre code d'activation.",console.log(e),t.send(o)})}).catch(e=>{let s={success:!1,message:"Une erreur technique s'est produite. merci de contacter l'administrateur du site."};e.name&&"MongoError"==e.name&&11e3==e.code&&(s.message="Un compte avec le même e-mail ou nom d'utilisateur existe déjà."),t.status(500).send(s)})},activate(e,t){console.log(e.body);const s=e.body.activationCode,n=e.body.email;y.find({email:n}).exec().then(e=>{const n=e[0],o=n.activationCode;n.isActive?t.status(500).send({message:"Impossible d'effectuer cette action"}):O.findById(o).exec().then(e=>{e.validationCode===s&&m()().isBefore(e.validationCodeExpirationDate)?(n.isActive=!0,n.activationDate=m()(),n.activationCode=null,n.save(),e.remove(),t.send({message:"Votre compte a été activé avec succés !"})):t.send({message:"Code incorrect ou expiré"})})}).catch(e=>{console.log(e),t.status(500).send({message:"Impossible d'effectuer cette action"})})},getAll(e,t){try{y.find().exec().then(e=>t.send(e))}catch(e){t.status(500).send(e)}},getById(e,t){y.findById(e.params.id).exec().then(e=>t.send(e),e=>t.status(500).send(e))},getUserById(e,t){console.log("getting user by id"),y.findById(e).exec().then(e=>{let s=e[0];return s.password=void 0,t(null,s)},e=>t(e,null))},authenticateUser(e,t,s){y.find({username:e}).exec().then(e=>{if(e.length>0&&Object(N.compareSync)(t,e[0].password)){let t=e[0];return t.password=void 0,s(null,t)}return s("invalid username or password",null)},e=>s("unknown error",null))}},U=e=>{let t="";const s="ABCDEFGHIJKLMNOPQRSTUVWXY1234567890";for(var n=0;n<e;n++)t=`${t}${s.substr(Math.random()*s.length,1)}`;return t};var _=C,q=s(3),P=s(4),D=s(5),T=s.n(D);var R={authenticate(e,t){y.find({username:e.body.username}).exec().then(s=>{if(s.length>0&&Object(N.compareSync)(e.body.password,s[0].password)){let n=s[0];n.password=void 0;const o={issuer:"Nabil Corp",subject:n.email,audience:"localhost",expiresIn:"3600000",algorithm:"RS512"},r=T.a.resolve("./src/keys/private.key"),a=process.env.PRIVATE_KEY||Object(q.readFileSync)(r,"utf-8");let i={success:!0,token:Object(P.sign)(n.toJSON(),a,o),message:"Vous êtes connectés",redirect:e.query.redirect};t.send(i)}else t.send({success:!1,message:"Nom d'utilisateur et/ou mot de passe invalide(s)"})},e=>t.send({success:!1,message:"Technical error"}))},test(e,t){const s=e.headers.authorization;if(null!=s){const e=T.a.resolve("./src/keys/public.key"),n=process.env.PUBLIC_KEY||Object(q.readFileSync)(e,"utf-8"),o=s.split(" ")[1];Object(P.verify)(o,n,(e,s)=>{e?(console.log(e),t.send({isAuthenticated:!1,data:"Unauthorized"})):t.send({isAuthenticated:!0,data:s})})}else t.send({isAuthenticated:!1,data:"Unauthorized"})}};var k=(e,t,s)=>{if(console.log(e.connection.remoteAddress),console.log(e.url),console.log(e.session),console.log(e.user),e.headers["user-agent"]){let n=e.headers["user-agent"];return console.log(n),n.includes("Trident")||n.includes("Postman")||e.headers["postman-token"]?t.status(404).send():s()}return t.status(401).send()};var B=(e,t,s)=>{const n=e.headers.authorization;if(null!=n){const e=T.a.resolve("./src/keys/public.key"),o=Object(q.readFileSync)(e,"utf-8"),r=n.split(" ")[1];Object(P.verify)(r,o,(e,n)=>{e?(console.log(e),t.status(403).send("Unauthorized")):s()})}else t.status(403).send("Unauthorized")};const G=o()(),L=process.env.PORT||3e3,$=process.env.MONGOUSER||"",z=process.env.MONGOPWD||"",F=process.env.MONGOURI||"localhost",Y=process.env.MONGODBNAME||"users",K=process.env.FRONTAPPURI||"http://localhost:8080";let V="";V=$&&z?`mongodb+srv://${$}:${z}@${F}/${Y}?retryWrites=true&w=majority`:`mongodb://${F}/${Y}`,a.a.connect(V,{useNewUrlParser:!0}).then(()=>console.log("Connected to MongoDB !")).catch(e=>console.log(e)),a.a.set("useCreateIndex",!0);const W={origin:K,optionsSuccessStatus:200};G.use(p()(W)),G.use(o.a.json()),G.use(d.a.urlencoded({extended:!1})),G.use(c()("dev")),G.get("/",(e,t)=>t.status(200).send({message:"Hello world from Express JS blah !"})),G.post("/api/v1/reflections",[k,g.create]),G.get("/api/v1/reflections",[k,g.getAll]),G.get("/api/v1/reflections/:id",[k,g.getOne]),G.delete("/api/v1/reflections/:id",[k,k]),G.get("/api/v1/users",[B,_.getAll]),G.get("/api/v1/users/:id",_.getById),G.post("/api/v1/users",_.create),G.post("/api/v1/users/activate",_.activate),G.post("/api/auth",R.authenticate),G.get("/api/auth",R.test),G.listen(L,()=>{console.log(`Server running on port ${L}`)})}]);